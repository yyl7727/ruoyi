<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TaskMapper">

    <resultMap type="Task" id="taskMap">
        <id     property="taskId"     column="task_id"     />
        <result property="taskName"   column="task_name"   />
        <result property="taskType"   column="task_type"   />
        <result property="taskNum"    column="task_num"    />
        <result property="taskDesc"   column="task_desc"   />
        <result property="status"     column="status"      />
        <result property="isDelete"   column="is_delete"   />
        <result property="createBy"   column="create_by"   />
        <result property="createTime" column="create_time" />
        <result property="updateBy"   column="update_by"   />
        <result property="updateTime" column="update_time" />
    </resultMap>

    <resultMap id="taskMemberMap" type="TaskMemberVo">
        <id     property="Id"          column="id"           />
        <result property="taskId"      column="task_id"      />
        <result property="taskName"    column="task_name"    />
        <result property="taskTeacher" column="task_teacher" />
        <result property="studentName" column="student_username" />
        <result property="status"      column="status"       />
        <result property="isDelete"    column="is_delete"    />
    </resultMap>

    <sql id="baseColumn">
        t.task_id,
        t.task_name,
        t.task_type,
        t.task_num,
        t.task_desc,
        t.status,
        t.is_delete,
        t.create_by,
        t.create_time,
        t.update_by,
        t.update_time
    </sql>

    <select id="selectTaskList" parameterType="Task" resultMap="taskMap">
        select <include refid="baseColumn"/>
        from task_info t
        <where>
            <choose>
                <when test="isDelete != '' and isDelete != null ">
                    and t.is_delete = #{isDelete}
                </when>
                <otherwise>
                    and t.is_delete = 0
                </otherwise>
            </choose>
            <if test="isDelete != '' and isDelete != null ">
                and t.is_delete = #{isDelete}
            </if>
            <if test="taskId != '' and taskId != null ">
                and t.task_id = #{taskId}
            </if>
            <if test="taskName != '' and taskName != null ">
                and t.task_name = #{taskName}
            </if>
            <if test="taskType != '' and taskType != null ">
                and t.task_type = #{taskType}
            </if>
            <if test="createBy != '' and createBy != null ">
                and t.create_by = #{createBy}
            </if>
        </where>
    </select>

    <select id="selectTaskById" parameterType="String" resultMap="taskMap">
        select <include refid="baseColumn"/>
        from task_info t
        where t.task_id = #{taskId}
    </select>

    <insert id="addTask" parameterType="Task">
        insert into task_info(task_name,task_type,task_num,task_desc,status,is_delete,create_by,create_time)
        values (#{taskName},#{taskType},#{taskNum},#{taskDesc},#{status},0,#{createBy},sysdate())
    </insert>

    <update id="updateTaskById" parameterType="Task">
        update task_info
        set task_name = #{taskName},task_type = #{taskType},task_num = #{taskNum},task_desc = #{taskDesc},status = #{status},update_by = #{updateBy},update_time = sysdate()
        where task_id = #{taskId}
    </update>

    <update id="changeStatusById" parameterType="Task">
        update task_info
        set status = #{status},update_by = #{updateBy},update_time = sysdate()
        where task_id = #{taskId}
    </update>

    <delete id="deleteTaskById" parameterType="Long">
        update task_info
        set is_delete = 1
        where task_id = #{taskId}
    </delete>

    <delete id="deleteTaskByIds" parameterType="Long">
        update task_info
        set is_delete = 1
        where task_id in
        <foreach collection="array" item="taskId" open="(" separator="," close=")">
            #{taskId}
        </foreach>
    </delete>

    <insert id="inviteIntoTask" parameterType="TaskMember">
        insert into task_member(task_id, student_username, status, is_delete, create_by, create_time) values(#{taskId}, #{studentName}, '0', '0', #{createBy}, sysdate())
    </insert>

    <update id="joinTask" parameterType="TaskMember">
        update task_member
        set status = 1, update_by = #{updateBy}, update_time = sysdate()
        where task_id = #{taskId}
        and student_username = #{studentName}
    </update>

    <delete id="unJoinTask" parameterType="TaskMember">
        delete from task_member
        where task_id = #{taskId}
          and student_username = #{studentName}
    </delete>

    <update id="joinTask1" parameterType="TaskMember">
        insert into task_member(task_id, student_username, status, is_delete, create_by, create_time) values(#{taskId}, #{studentName}, '1', '0', #{createBy}, sysdate())
    </update>

    <update id="unJoinTask1" parameterType="TaskMember">
        update task_member
        set status = 2, update_by = #{updateBy}, update_time = sysdate()
        where task_id = #{taskId}
          and student_username = #{studentName}
    </update>

    <select id="selectJoinedTask" parameterType="String" resultMap="taskMap">
        select <include refid="baseColumn"/>
        from task_info t
        left join task_member tm on t.task_id = tm.task_id
        where tm.student_username = #{userName}
    </select>

    <select id="selectTaskMember" parameterType="TaskMember" resultMap="taskMemberMap">
        select a.id, a.task_id, b.task_name, b.create_by as task_teacher, a.student_username, a.status, a.is_delete
        from task_member a
        left join task_info b on a.task_id = b.task_id
        where a.is_delete = 0
        <if test="taskId != null and taskId != ''">
            and a.task_id = #{taskId}
        </if>
        <if test="studentName != null and studentName != ''">
            and a.student_username = #{studentName}
        </if>
    </select>
</mapper>
